

init python:

Â Â Â Â class PongDisplayable(renpy.Displayable):

Â Â Â Â Â Â Â Â def __init__(self):

Â Â Â Â Â Â Â Â Â Â Â Â renpy.Displayable.__init__(self)

Â Â Â Â Â Â Â Â Â Â Â Â # The sizes of some of the images.
Â Â Â Â Â Â Â Â Â Â Â Â self.PADDLE_WIDTH = 12
Â Â Â Â Â Â Â Â Â Â Â Â self.PADDLE_HEIGHT = 95
Â Â Â Â Â Â Â Â Â Â Â Â self.PADDLE_X = 240
Â Â Â Â Â Â Â Â Â Â Â Â self.BALL_WIDTH = 15
Â Â Â Â Â Â Â Â Â Â Â Â self.BALL_HEIGHT = 15
Â Â Â Â Â Â Â Â Â Â Â Â self.COURT_TOP = 190
Â Â Â Â Â Â Â Â Â Â Â Â self.COURT_BOTTOM = 880

Â Â Â Â Â Â Â Â Â Â Â Â # Some displayables we use.
Â Â Â Â Â Â Â Â Â Â Â Â self.paddle = Solid("#ffffff", xsize=self.PADDLE_WIDTH, ysize=self.PADDLE_HEIGHT)
Â Â Â Â Â Â Â Â Â Â Â Â self.ball = Solid("#ffffff", xsize=self.BALL_WIDTH, ysize=self.BALL_HEIGHT)

Â Â Â Â Â Â Â Â Â Â Â Â # If the ball is stuck to the paddle.
Â Â Â Â Â Â Â Â Â Â Â Â self.stuck = True

Â Â Â Â Â Â Â Â Â Â Â Â # The positions of the two paddles.
Â Â Â Â Â Â Â Â Â Â Â Â self.playery = (self.COURT_BOTTOM - self.COURT_TOP) / 2
Â Â Â Â Â Â Â Â Â Â Â Â self.computery = self.playery

Â Â Â Â Â Â Â Â Â Â Â Â # The speed of the computer.
Â Â Â Â Â Â Â Â Â Â Â Â self.computerspeed = 350.0

Â Â Â Â Â Â Â Â Â Â Â Â # The position, delta-position, and the speed of the
Â Â Â Â Â Â Â Â Â Â Â Â # ball.
Â Â Â Â Â Â Â Â Â Â Â Â self.bx = self.PADDLE_X + self.PADDLE_WIDTH + 10
Â Â Â Â Â Â Â Â Â Â Â Â self.by = self.playery
Â Â Â Â Â Â Â Â Â Â Â Â self.bdx = .5
Â Â Â Â Â Â Â Â Â Â Â Â self.bdy = .5
Â Â Â Â Â Â Â Â Â Â Â Â self.bspeed = 600.0

Â Â Â Â Â Â Â Â Â Â Â Â # The time of the past render-frame.
Â Â Â Â Â Â Â Â Â Â Â Â self.oldst = None

Â Â Â Â Â Â Â Â Â Â Â Â # The winner.
Â Â Â Â Â Â Â Â Â Â Â Â self.winner = None

Â Â Â Â Â Â Â Â def visit(self):
Â Â Â Â Â Â Â Â Â Â Â Â return [ self.paddle, self.ball ]

Â Â Â Â Â Â Â Â # Recomputes the position of the ball, handles bounces, and
Â Â Â Â Â Â Â Â # draws the screen.
Â Â Â Â Â Â Â Â def render(self, width, height, st, at):

Â Â Â Â Â Â Â Â Â Â Â Â # The Render object we'll be drawing into.
Â Â Â Â Â Â Â Â Â Â Â Â r = renpy.Render(width, height)

Â Â Â Â Â Â Â Â Â Â Â Â # Figure out the time elapsed since the previous frame.
Â Â Â Â Â Â Â Â Â Â Â Â if self.oldst is None:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.oldst = st

Â Â Â Â Â Â Â Â Â Â Â Â dtime = st - self.oldst
Â Â Â Â Â Â Â Â Â Â Â Â self.oldst = st

Â Â Â Â Â Â Â Â Â Â Â Â # Figure out where we want to move the ball to.
Â Â Â Â Â Â Â Â Â Â Â Â speed = dtime * self.bspeed
Â Â Â Â Â Â Â Â Â Â Â Â oldbx = self.bx

Â Â Â Â Â Â Â Â Â Â Â Â if self.stuck:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.by = self.playery
Â Â Â Â Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.bx += self.bdx * speed
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.by += self.bdy * speed

Â Â Â Â Â Â Â Â Â Â Â Â # Move the computer's paddle. It wants to go to self.by, but
Â Â Â Â Â Â Â Â Â Â Â Â # may be limited by it's speed limit.
Â Â Â Â Â Â Â Â Â Â Â Â cspeed = self.computerspeed * dtime
Â Â Â Â Â Â Â Â Â Â Â Â if abs(self.by - self.computery) <= cspeed:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.computery = self.by
Â Â Â Â Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.computery += cspeed * (self.by - self.computery) / abs(self.by - self.computery)

Â Â Â Â Â Â Â Â Â Â Â Â # Handle bounces.

Â Â Â Â Â Â Â Â Â Â Â Â # Bounce off of top.
Â Â Â Â Â Â Â Â Â Â Â Â ball_top = self.COURT_TOP + self.BALL_HEIGHT / 2
Â Â Â Â Â Â Â Â Â Â Â Â if self.by < ball_top:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.by = ball_top + (ball_top - self.by)
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.bdy = -self.bdy

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â if not self.stuck:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â renpy.sound.play("pong_beep.opus", channel=0)

Â Â Â Â Â Â Â Â Â Â Â Â # Bounce off bottom.
Â Â Â Â Â Â Â Â Â Â Â Â ball_bot = self.COURT_BOTTOM - self.BALL_HEIGHT / 2
Â Â Â Â Â Â Â Â Â Â Â Â if self.by > ball_bot:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.by = ball_bot - (self.by - ball_bot)
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.bdy = -self.bdy

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â if not self.stuck:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â renpy.sound.play("pong_beep.opus", channel=0)

Â Â Â Â Â Â Â Â Â Â Â Â # This draws a paddle, and checks for bounces.
Â Â Â Â Â Â Â Â Â Â Â Â def paddle(px, py, hotside):

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # Render the paddle image. We give it an 800x600 area
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # to render into, knowing that images will render smaller.
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # (This isn't the case with all displayables. Solid, Frame,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # and Fixed will expand to fill the space allotted.)
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # We also pass in st and at.
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â pi = renpy.render(self.paddle, width, height, st, at)

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # renpy.render returns a Render object, which we can
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # blit to the Render we're making.
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â r.blit(pi, (int(px), int(py - self.PADDLE_HEIGHT / 2)))

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â if py - self.PADDLE_HEIGHT / 2 <= self.by <= py + self.PADDLE_HEIGHT / 2:

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â hit = False

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â if oldbx >= hotside >= self.bx:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.bx = hotside + (hotside - self.bx)
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.bdx = -self.bdx
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â hit = True

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â elif oldbx <= hotside <= self.bx:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.bx = hotside - (self.bx - hotside)
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.bdx = -self.bdx
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â hit = True

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â if hit:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â renpy.sound.play("pong_boop.opus", channel=1)
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.bspeed *= 1.10

Â Â Â Â Â Â Â Â Â Â Â Â # Draw the two paddles.
Â Â Â Â Â Â Â Â Â Â Â Â paddle(self.PADDLE_X, self.playery, self.PADDLE_X + self.PADDLE_WIDTH)
Â Â Â Â Â Â Â Â Â Â Â Â paddle(width - self.PADDLE_X - self.PADDLE_WIDTH, self.computery, width - self.PADDLE_X - self.PADDLE_WIDTH)

Â Â Â Â Â Â Â Â Â Â Â Â # Draw the ball.
Â Â Â Â Â Â Â Â Â Â Â Â ball = renpy.render(self.ball, width, height, st, at)
Â Â Â Â Â Â Â Â Â Â Â Â r.blit(ball, (int(self.bx - self.BALL_WIDTH / 2),int(self.by - self.BALL_HEIGHT / 2)))

Â Â Â Â Â Â Â Â Â Â Â Â # Check for a winner.
Â Â Â Â Â Â Â Â Â Â Â Â if self.bx < -50:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.winner = "eileen"

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # Needed to ensure that event is called, noticing
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # the winner.
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â renpy.timeout(0)

Â Â Â Â Â Â Â Â Â Â Â Â elif self.bx > width + 50:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.winner = "player"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â renpy.timeout(0)

Â Â Â Â Â Â Â Â Â Â Â Â # Ask that we be re-rendered ASAP, so we can show the next
Â Â Â Â Â Â Â Â Â Â Â Â # frame.
Â Â Â Â Â Â Â Â Â Â Â Â renpy.redraw(self, 0)

Â Â Â Â Â Â Â Â Â Â Â Â # Return the Render object.
Â Â Â Â Â Â Â Â Â Â Â Â return r

Â Â Â Â Â Â Â Â # Handles events.
Â Â Â Â Â Â Â Â def event(self, ev, x, y, st):

Â Â Â Â Â Â Â Â Â Â Â Â import pygame

Â Â Â Â Â Â Â Â Â Â Â Â # Mousebutton down == start the game by setting stuck to
Â Â Â Â Â Â Â Â Â Â Â Â # false.
Â Â Â Â Â Â Â Â Â Â Â Â if ev.type == pygame.MOUSEBUTTONDOWN and ev.button == 1:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â self.stuck = False

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â # Ensure the pong screen updates.
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â renpy.restart_interaction()

Â Â Â Â Â Â Â Â Â Â Â Â # Set the position of the player's paddle.
Â Â Â Â Â Â Â Â Â Â Â Â y = max(y, self.COURT_TOP)
Â Â Â Â Â Â Â Â Â Â Â Â y = min(y, self.COURT_BOTTOM)
Â Â Â Â Â Â Â Â Â Â Â Â self.playery = y

Â Â Â Â Â Â Â Â Â Â Â Â # If we have a winner, return him or her. Otherwise, ignore
Â Â Â Â Â Â Â Â Â Â Â Â # the current event.
Â Â Â Â Â Â Â Â Â Â Â Â if self.winner:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â return self.winner
Â Â Â Â Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â raise renpy.IgnoreEvent()


default popups_closed = 0
default time_remaining = 10.0
default system_integrity = 5

init python:
Â Â Â Â import random

Â Â Â Â def InitPopupGame():
Â Â Â Â Â Â Â Â global popups_closed, time_remaining, popups, total_popups_spawned
Â Â Â Â Â Â Â Â popups_closed = 0
Â Â Â Â Â Â Â Â time_remaining = 10.0
Â Â Â Â Â Â Â Â total_popups_spawned = 5Â  # Start with 5 popups initially
Â Â Â Â Â Â Â Â popups = [(random.randint(100, 1600), random.randint(100, 900)) for _ in range(5)]

Â Â Â Â def ClosePopup(index):
Â Â Â Â Â Â Â Â global popups_closed, total_popups_spawned

Â Â Â Â Â Â Â Â popups_closed += 1
Â Â Â Â Â Â Â Â renpy.play("sounds/click.mp3", channel="sound")

Â Â Â Â Â Â Â Â # Only respawn new popups if fewer than 10 total have been spawned
Â Â Â Â Â Â Â Â if total_popups_spawned < 10:
Â Â Â Â Â Â Â Â Â Â Â Â popups[index] = (random.randint(100, 1600), random.randint(100, 900))Â  # Respawn popup
Â Â Â Â Â Â Â Â Â Â Â Â total_popups_spawned += 1
Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â popups[index] = NoneÂ  # Remove this popup permanently

Â Â Â Â Â Â Â Â # If all popups are clicked, end the game
Â Â Â Â Â Â Â Â if popups_closed >= 10:
Â Â Â Â Â Â Â Â Â Â Â Â renpy.hide_screen("popup_minigame")
Â Â Â Â Â Â Â Â Â Â Â Â renpy.jump("after_popup_game")Â  # Use `jump` instead of `call`

# ðŸ“Œ Popup Minigame Screen (Ensures Correct Return Handling)
screen popup_minigame():
Â Â Â Â modal True

Â Â Â Â timer 0.05 repeat True action [
Â Â Â Â Â Â Â Â SetVariable("time_remaining", max(time_remaining - 0.05, 0)),
Â Â Â Â Â Â Â Â If(time_remaining <= 0.0, true=[Hide("popup_minigame"), Return(popups_closed)])
Â Â Â Â ]

Â Â Â Â add "bg_popup"

Â Â Â Â for i in range(5):
Â Â Â Â Â Â Â Â if popups[i] is not None:
Â Â Â Â Â Â Â Â Â Â Â Â imagebutton:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â xpos popups[i][0]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â ypos popups[i][1]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â idle "popup"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â hover "popup_hover"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â action [Function(ClosePopup, i)]

Â Â Â Â # Timer bar
Â Â Â Â bar value StaticValue(time_remaining, 10.0):
Â Â Â Â Â Â Â Â align (.5, .001)
Â Â Â Â Â Â Â Â xmaximum 400
Â Â Â Â Â Â Â Â ymaximum 20
Â Â Â Â Â Â Â Â left_bar Frame("slider_left.png", 10, 10)
Â Â Â Â Â Â Â Â right_bar Frame("slider_right.png", 10, 10)
Â Â Â Â Â Â Â Â thumb None
Â Â Â Â Â Â Â Â thumb_shadow None



screen pong():

Â Â Â Â default pong = PongDisplayable()

Â Â Â Â add "bg pong field"

Â Â Â Â add pong

Â Â Â Â text "CyberGOD":
Â Â Â Â Â Â Â Â color "#ffffff"
Â Â Â Â Â Â Â Â xpos 500
Â Â Â Â Â Â Â Â xanchor 0.5
Â Â Â Â Â Â Â Â ypos 25
Â Â Â Â Â Â Â Â size 60

Â Â Â Â text "Virus":
Â Â Â Â Â Â Â Â color "#ffffff"
Â Â Â Â Â Â Â Â xpos (1300)
Â Â Â Â Â Â Â Â xanchor 0.5
Â Â Â Â Â Â Â Â ypos 25
Â Â Â Â Â Â Â Â size 60

Â Â Â Â if pong.stuck:
Â Â Â Â Â Â Â Â text "Click to Begin":
Â Â Â Â Â Â Â Â Â Â Â Â xalign 0.5
Â Â Â Â Â Â Â Â Â Â Â Â ypos 50
Â Â Â Â Â Â Â Â Â Â Â Â size 40

label play_pong:

Â Â Â Â window hideÂ  # Hide the window and quick menu while in pong
Â Â Â Â hide mc
Â Â Â Â hide charf
Â Â Â Â $ quick_menu = False

Â Â Â Â call screen pong

Â Â Â Â $ quick_menu = True
Â Â Â Â window show

Â Â Â Â jump job_offer_end



label start:
Â Â Â Â scene techbg
Â Â Â Â show mc:
Â Â Â Â Â Â Â Â xalign 0.0 yalign 1.0


Â Â Â Â define mc = Character("CyberGOD")
Â Â Â Â define c = Character("Julie")
Â Â Â Â define d = Character("Dylan")
Â Â Â Â define f = Character("Sherry")
Â Â Â Â define g = Character("UNKNOWN")
Â Â Â 
Â Â Â 
Â Â Â Â mc "I'm a cybersecurity GOD. I'm very cracked."
Â Â Â Â mc "This is great because I get to help everyone with cybersecurity"
Â Â Â Â mc "So let's start, who should I help first?"
Â Â Â 
Â Â Â Â menu:
Â Â Â Â Â Â Â Â # "Jenny":
Â Â Â Â Â Â Â Â # Â  Â  jump email_lottery
Â Â Â Â Â Â Â Â # "Gavin":
Â Â Â Â Â Â Â Â # Â  Â  jump instagram
Â Â Â Â Â Â Â Â "Julie":
Â Â Â Â Â Â Â Â Â Â Â Â jump call
Â Â Â Â Â Â Â Â "Dylan":
Â Â Â Â Â Â Â Â Â Â Â Â jump popups
Â Â Â Â Â Â Â Â # "Sean":
Â Â Â Â Â Â Â Â # Â  Â  jump password
Â Â Â Â Â Â Â Â "Sherry":
Â Â Â Â Â Â Â Â Â Â Â Â jump job_offer






# label email_lottery:
# Â  Â  mc "Jenny just received an email! Let's see what it is"
# Â  Â  show chara:
# Â  Â  Â  Â  xalign 1.0 yalign 1.0
# Â  Â  a "Look! Look! I just got an email saying I won the lottery! I'm going to input my bank account information so they can send me money!"
# Â  Â  mc "Wait! Can I see the email?"
# Â  Â  a "sure!"
# Â  Â  scene email
# Â  Â  menu:
# Â  Â  Â  Â  "something isn't right...":
# Â  Â  Â  Â  Â  Â  menu:
# Â  Â  Â  Â  Â  Â  Â  Â  "check sender's email":
# Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  scene senderemail
# Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  mc "ah look this is wrong"
Â Â Â Â Â Â Â 
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
# Â  Â  Â  Â  "everything seems fine...":
# Â  Â  Â  Â  Â  Â  mc "oh no!"
Â Â Â 
# Â  Â  a "However, I'd sent my bank info and now my credit cards are frozen! Please help me, CyberGOD!"
# Â  Â  mc "Well, that's dumb of you. But thats also why I'm here. Lets save the account"
# Â  Â  "If the creator was cracked at coding there would be a minigame here"
# Â  Â  hide chara
# Â  Â  hide mc
# Â  Â  #I would have this jump to a minigame and the minigame jump to the end part if we finish the minigame
# Â  Â  jump minigame1


# label email_end:
# Â  Â  show mc:
# Â  Â  Â  Â  xalign 0.0 yalign 1.0
# Â  Â  mc "Well, that was easy. Remember next time to verify emails such as lottery"
# Â  Â  mc "Who should we help next?"
# Â  Â  menu:
# Â  Â  Â  Â  "Gavin":
# Â  Â  Â  Â  Â  Â  jump instagram
# Â  Â  Â  Â  "Julie":
# Â  Â  Â  Â  Â  Â  jump call
# Â  Â  Â  Â  "Dylan":
# Â  Â  Â  Â  Â  Â  jump popups
# Â  Â  Â  Â  "Sean":
# Â  Â  Â  Â  Â  Â  jump password
# Â  Â  Â  Â  "Sherry":
# Â  Â  Â  Â  Â  Â  jump job_offer
# Â  Â  Â  Â  "That's it":
# Â  Â  Â  Â  Â  Â  jump end




# label instagram:
# Â  Â  mc "Our victim, NAME, fell for an instagram scam"
# Â  Â  show charb:
# Â  Â  Â  Â  xalign 1.0 yalign 1.0
# Â  Â  b "I got a dm from this girl who's a 10 who said they got hacked and needed help!"
# Â  Â  b "Of course, like the simp I am, I helped and clicked on the link they sent"
# Â  Â  b "Now, I keep getting random popups. It's a mess. Please, only you can save me, CyberGOD!"
# Â  Â  mc "the stupidity of mankind continues to amaze me."
# Â  Â  mc "but well, this issue is nothing to to a god like me. Lets fix this computer"
# Â  Â  "If the creator was cracked at coding there would be a minigame here"
# Â  Â  hide charb
# Â  Â  hide mc

# Â  Â  mc "Identify the suspicious link:"
# Â  Â  menu:
# Â  Â  Â  Â  "www.instagram.com/help":
# Â  Â  Â  Â  Â  Â  $ result = "wrong"
# Â  Â  Â  Â  "www.instagrarn.com/help":
# Â  Â  Â  Â  Â  Â  $ result = "correct"
# Â  Â  Â  Â  "www.instagram.com/support":
# Â  Â  Â  Â  Â  Â  $ result = "wrong"
Â Â Â 
# Â  Â  if result == "correct":
# Â  Â  Â  Â  mc "Correct! You identified the suspicious link."
# Â  Â  Â  Â  mc "Remember next time to think critically about Instagram DMs and if they might be a scam."
# Â  Â  else:
# Â  Â  Â  Â  mc "Wrong! That was not the suspicious link."
# Â  Â  Â  Â  mc "Be more careful next time."
Â Â Â 
# Â  Â  show mc:
# Â  Â  Â  Â  xalign 0.0 yalign 1.0
# Â  Â  mc "how trivial. Remember next time to think critically about instagram dms and if they might be a scam"
# Â  Â  mc "Who should we help next?"
# Â  Â  menu:
# Â  Â  Â  Â  "Jenny":
# Â  Â  Â  Â  Â  Â  jump email_lottery
# Â  Â  Â  Â  "Julie":
# Â  Â  Â  Â  Â  Â  jump call
# Â  Â  Â  Â  "Dylan":
# Â  Â  Â  Â  Â  Â  jump popups
# Â  Â  Â  Â  "Sean":
# Â  Â  Â  Â  Â  Â  jump password
# Â  Â  Â  Â  "Sherry":
# Â  Â  Â  Â  Â  Â  jump job_offer
# Â  Â  Â  Â  "That's it":
# Â  Â  Â  Â  Â  Â  jump end




label call:
Â Â Â Â mc "Our friend, Julie, received a call, but it feels off."
Â Â Â Â show chara:
Â Â Â Â Â Â Â Â xalign 1.0 yalign 1.0
Â Â Â Â show unknown:
Â Â Â Â Â Â Â Â xalign 0.5 yalign 1.2
Â Â Â Â g "Hello, this is Morgan from the bank. Is this Julie I'm speaking with?"
Â Â Â Â c "U-uh yes? Is there a problem?"
Â 
Â Â Â Â g "Yes, your account is at risk of losing all the savings. And I can take care of this for you if you would send me a picture of your government ID and tell us-"
Â Â Â Â menu:
Â Â Â Â Â Â Â Â "stay silent":
Â Â Â Â Â Â Â Â Â Â Â Â mc "..."
Â Â Â Â Â Â Â Â Â Â Â Â g "- tell us your card number, expiration date, and cvv number please"
Â Â Â Â Â Â Â Â Â Â Â Â c "*gives information*"
Â Â Â Â Â Â Â Â Â Â Â Â scene scammedbybank
Â Â Â Â Â Â Â Â Â Â Â Â "game over"
Â Â Â Â Â Â Â Â Â Â Â Â menu:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â "restart":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â jump start
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â "quit":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â jump end
Â Â Â Â Â Â Â Â "speak up":
Â Â Â Â Â Â Â Â Â Â Â Â mc "I feel like this is an important matter, we should meet in person at the bank to resolve it instead of doing this over the phone."
Â Â Â Â Â Â Â Â Â Â Â Â c "great idea, CyberGOD!"
Â Â Â Â Â Â Â Â Â Â Â Â c "Hello, is it okay if I come to the bank to resolve this?"
Â Â Â Â Â Â Â Â Â Â Â Â g "No, this is really urgent, we need to do it NOW!"
Â Â Â Â Â Â Â Â Â Â Â Â mc "We're really close to the bank!"
Â Â Â Â Â Â Â Â Â Â Â Â g "No need, JUST TELL ME!"
Â Â Â Â Â Â Â Â Â Â Â Â c "wait... this is"
Â Â Â Â Â Â Â Â Â Â Â Â mc "yes, this is a scam"
Â Â Â Â Â Â Â Â Â Â Â Â g "urgh ****** nosy brats!!! *unknown caller hang up*"Â Â 
Â Â Â Â hide unknown
Â Â Â Â c "OMG, thank you so much for saving me!"
Â Â Â Â c "what would I do without you, CyberGOD. Bye~"
Â Â Â Â mc "Well, Julie, you should be more careful. What's do you use as your password?"
Â Â Â Â c "I use my name! it's easy to remember"
Â Â Â Â mc "Yes, but it's also easy to hack. Instead, you should use a secure password"
Â Â Â Â mc "Now, let's create a strong password for your new bank account."


Â Â Â Â # Get favorite TV show character
Â Â Â Â $ fact1 = renpy.input("What is your favorite TV show character?")
Â Â Â Â $ fact1 = fact1.lower().strip()
Â Â Â Â while not fact1.isalnum():
Â Â Â Â Â Â Â Â $ fact1 = renpy.input("Enter a valid word (letters and numbers only).")


Â Â Â Â # Replace certain characters for security
Â Â Â Â python:
Â Â Â Â Â Â Â Â new_fact = ""
Â Â Â Â Â Â Â Â for val in range(len(fact1)):
Â Â Â Â Â Â Â Â Â Â Â Â if val != 0:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â if fact1[val] == "a":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact += "@"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â elif fact1[val] == "i":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact += "!"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â elif fact1[val] == "o":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact += "0"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â elif fact1[val] == "e":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact += "3"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact += fact1[val]
Â Â Â Â Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact += fact1[val]
Â Â Â Â Â Â Â Â fact1 = new_fact.capitalize()


Â Â Â Â # Get childhood street number
Â Â Â Â $ fact2 = renpy.input("What was the street number of your childhood home?", length=4)
Â Â Â Â while not fact2.isdigit():
Â Â Â Â Â Â Â Â $ fact2 = renpy.input("Enter a valid number.")


Â Â Â Â # If the password length is too short, ask for more details
Â Â Â Â if len(fact1) + len(fact2) < 12:
Â Â Â Â Â Â Â 
Â Â Â Â Â Â Â Â # Ask for favorite color
Â Â Â Â Â Â Â Â $ fact3 = renpy.input("What is your favorite color?")
Â Â Â Â Â Â Â Â $ fact3 = fact3.lower().strip()
Â Â Â Â Â Â Â Â while not fact3.isalnum():
Â Â Â Â Â Â Â Â Â Â Â Â $ fact3 = renpy.input("Enter a valid word.")


Â Â Â Â Â Â Â Â python:
Â Â Â Â Â Â Â Â Â Â Â Â new_fact3 = ""
Â Â Â Â Â Â Â Â Â Â Â Â for val in range(len(fact3)):
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â if val != 0:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â if fact3[val] == "a":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact3 += "@"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â elif fact3[val] == "i":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact3 += "!"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â elif fact3[val] == "o":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact3 += "0"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â elif fact3[val] == "e":
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact3 += "3"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact3 += fact3[val]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â new_fact3 += fact3[val]
Â Â Â Â Â Â Â Â Â Â Â Â fact3 = new_fact3.capitalize()
Â Â Â 
Â Â Â Â # Construct the password
Â Â Â Â python:
Â Â Â Â Â Â Â Â if len(fact1) + len(fact2) >= 12:
Â Â Â Â Â Â Â Â Â Â Â Â password = f"{fact1}@{fact2}"
Â Â Â Â Â Â Â Â elif len(fact1) + len(fact2) + len(fact3) >= 12:
Â Â Â Â Â Â Â Â Â Â Â Â password = f"{fact1}{fact3}@{fact2}"
Â Â Â Â Â Â Â Â else:
Â Â Â Â Â Â Â Â Â Â Â Â password = f"{fact1}{fact3}Strong@{fact2}"


Â Â Â Â # Display the generated password
Â Â Â Â mc "Your secure password is: [password]"
Â Â Â 
Â Â Â Â c "Thank you so much, CyberGOD! I'll use this secure password from now on"
Â Â Â Â mc "Yep! Bye Julie!"

Â Â Â Â hide chara
Â Â Â Â mc "ok, so let's review what we learned today"
Â Â Â Â mc "What should you do if you get an unknown phone call?"
Â Â Â Â menu:
Â Â Â Â Â Â Â Â "Give them your private information if they ask for it":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â Â Â Â Â Â "Proceed with caution as it may be a scam call":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "correct"
Â Â Â Â Â Â Â Â "Ignore the call and block the number":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â 
Â Â Â Â if result == "correct":
Â Â Â Â Â Â Â Â mc "Correct! You've identified the best course of action."
Â Â Â Â else:
Â Â Â Â Â Â Â Â mc "Wrong! The correct answer is to proceed with caution as it may be a scam call."
Â Â Â Â Â Â Â Â mc "Be more careful next time."
Â Â Â Â mc "What should you choose as your password"
Â Â Â Â menu:
Â Â Â Â Â Â Â Â "Your name":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â Â Â Â Â Â "A random combination of letters and numbers":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "correct"
Â Â Â Â Â Â Â Â "Your birthday":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â 
Â Â Â Â if result == "correct":
Â Â Â Â Â Â Â Â mc "Correct! You've identified the best password."
Â Â Â Â else:
Â Â Â Â Â Â Â Â mc "Wrong! The correct answer is a random combination of letters and numbers."
Â Â Â Â Â Â Â Â mc "Be more careful next time."
Â Â Â Â mc "Tips to remember:"
Â Â Â Â mc "DO NOT share your private information before verifying the caller's identity."
Â Â Â Â mc "Remember next time to think critically about unknown phone calls and if they might be a scam."
Â Â Â Â mc "Who do we help next?"

Â Â Â Â menu:
Â Â Â Â Â Â Â Â "Dylan":
Â Â Â Â Â Â Â Â Â Â Â Â jump popups
Â Â Â Â Â Â Â Â "Sherry":
Â Â Â Â Â Â Â Â Â Â Â Â jump job_offer
Â Â Â Â Â Â Â Â "quit":
Â Â Â Â Â Â Â Â Â Â Â Â jump end

Â Â Â 


label popups:
Â Â Â Â mc "Our poor friend, Dylan, was casually reading webtoons illegally off the web because he didn't want to buy it. While scrolling..."
Â Â Â Â show chard:
Â Â Â Â Â Â Â Â xalign 1.0 yalign 1.0
Â Â Â Â d "I was just reading, and then suddenly I got so many popups!"
Â Â Â Â d "They're so annoying! Help!"
Â Â Â Â mc "Don't worry Dylan, that's what I'm here for"
Â Â Â Â mc "Let's get rid of the popups"

Â Â Â Â # Initialize the minigame
Â Â Â Â $ InitPopupGame()
Â Â Â Â call screen popup_minigame
Â Â Â Â $ result = _return

Â Â Â Â # Ensure the result is valid
Â Â Â Â if result is None:
Â Â Â Â Â Â Â Â $ result = 0Â  # Prevent crashes if no value was returned

Â Â Â Â jump after_popup_game

label after_popup_game:
Â Â Â Â show mc:
Â Â Â Â Â Â Â Â xalign 0.0 yalign 1.0

Â Â Â Â if popups_closed >= 10:
Â Â Â Â Â Â Â Â mc "Great job! You cleared all the pop-ups!"
Â Â Â Â else:
Â Â Â Â Â Â Â Â mc "You didn't clear all the pop-ups in time. Be more careful next time."

Â Â Â Â jump popups_end

label popups_end:
Â Â Â Â show chard:
Â Â Â Â Â Â Â Â xalign 1.0 yalign 1.0
Â Â Â Â show mc:
Â Â Â Â Â Â Â Â xalign 0.0 yalign 1.0
Â Â Â Â mc "Well, Dylan, now you know"
Â Â Â Â mc "To avoid this: If you can, avoid using piracy websites as they are full of malware. We don't know what we are exposing our data to. "
Â Â Â Â mc "DO NOT click on the pop-up or download anything suspicious."
Â Â Â Â mc "If you happen to open the popup, close the tab IMMEDIATELY!! Try using an ad blocker to fight off these pesky pop-ups!!"
Â Â Â Â d "Thank you so much, CyberGOD! I'll be more careful next time!"
Â Â Â Â hide chard

Â Â Â Â mc "Well, let's go over some trivia"
Â Â Â Â mc "Which domain is FAKE?"
Â Â Â Â menu:
Â Â Â Â Â Â Â Â "googIe-security.net":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "correct"
Â Â Â Â Â Â Â Â "irs.gov":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â Â Â Â Â Â "tesla.com":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â 
Â Â Â Â if result == "correct":
Â Â Â Â Â Â Â Â mc "Correct! You've identified the fake domain."
Â Â Â Â else:
Â Â Â Â Â Â Â Â mc "Wrong! The wrong domain is googIe-security.net"
Â Â Â Â Â Â Â Â mc "Be more careful next time."

Â Â Â Â mc "Let's try another one. Which domain is FAKE?"
Â Â Â Â menu:
Â Â Â Â Â Â Â Â "instagrarn-login.com":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "correct"
Â Â Â Â Â Â Â Â "cloudflare.com":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â Â Â Â Â Â "zoom.us":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â 
Â Â Â Â if result == "correct":
Â Â Â Â Â Â Â Â mc "Correct! You've identified the fake domain."
Â Â Â Â else:
Â Â Â Â Â Â Â Â mc "Wrong! The wrong domain is instagrarn-login.com"
Â Â Â Â Â Â Â Â mc "Be more careful next time."

Â Â Â Â mc "One more time. Which domain is FAKE?"
Â Â Â Â menu:
Â Â Â Â Â Â Â Â "telegram.org":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â Â Â Â Â Â "twitch.tv":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "wrong"
Â Â Â Â Â Â Â Â "amazn-support.help":
Â Â Â Â Â Â Â Â Â Â Â Â $ result = "correct"
Â Â Â 
Â Â Â Â if result == "correct":
Â Â Â Â Â Â Â Â mc "Correct! You've identified the fake domain."
Â Â Â Â else:
Â Â Â Â Â Â Â Â mc "Wrong! The wrong domain is amazn-support.help"
Â Â Â Â Â Â Â Â mc "Be more careful next time."
Â Â Â 
Â Â Â Â mc "Well, that's that. Who should I help next?"

Â Â Â Â menu:
Â Â Â Â Â Â Â Â "Julie":
Â Â Â Â Â Â Â Â Â Â Â Â jump call
Â Â Â Â Â Â Â Â "Sherry":
Â Â Â Â Â Â Â Â Â Â Â Â jump job_offer
Â Â Â Â Â Â Â Â "Quit":
Â Â Â Â Â Â Â Â Â Â Â Â jump end



# label password:
# Â  Â  mc "Our victim, NAME, fell for a scam email"
# Â  Â  show chare:
# Â  Â  Â  Â  xalign 1.0 yalign 1.0
# Â  Â  e "something"
# Â  Â  "minigame here"
# Â  Â  hide chare
# Â  Â  hide mc
# Â  Â  jump password_end


# label password_end:
# Â  Â  show mc:
# Â  Â  Â  Â  xalign 0.0 yalign 1.0
# Â  Â  mc "who should we help next?"
# Â  Â  menu:
# Â  Â  Â  Â  "Jenny":
# Â  Â  Â  Â  Â  Â  jump email_lottery
# Â  Â  Â  Â  "Gavin":
# Â  Â  Â  Â  Â  Â  jump instagram
# Â  Â  Â  Â  "Julie":
# Â  Â  Â  Â  Â  Â  jump call
# Â  Â  Â  Â  "Dylan":
# Â  Â  Â  Â  Â  Â  jump popups
# Â  Â  Â  Â  "Sherry":
# Â  Â  Â  Â  Â  Â  jump job_offer
# Â  Â  Â  Â  "quit":
# Â  Â  Â  Â  Â  Â  jump end

label job_offer:
Â Â Â Â mc "Sherry received an amazing job offer. However, something seems off. Let's take a closer look."
Â Â Â Â show charf:
Â Â Â Â Â Â Â Â xalign 1.0 yalign 1.0
Â Â Â Â f "Hi CyberGOD!! I just received an email from a company offering me a job. I'm so excited!"
Â Â Â Â mc "That's great! I'm so proud of you!"
Â Â Â Â f "Here, let me show you!! It's this one, for a software engineering position at Google!"
Â Â Â Â show email:
Â Â Â Â Â Â Â Â xalign 0.5 yalign 1
Â Â Â Â f "here!"
Â Â Â Â hide email
Â Â Â Â f "I've sent in so many applications, I'm so happy the job hunt is finally over!"
Â Â Â Â mc "Wow, congratul- wait..."
Â Â Â Â mc "Sherry, this doesn't look right. Look at the sender. I don't think this is real"
Â Â Â Â f "Huh? Wait, no... you're right! Oh, what do I do? I just clicked on the link and it led me to a phishing website!"
Â Â Â Â mc "You may have a virus in your computer"
Â Â Â Â mc "But don't worry, I'm here to help. Let's get rid of it"
Â Â Â Â jump play_pong
Â Â Â 

label job_offer_end:
Â Â Â Â show mc:
Â Â Â Â Â Â Â Â xalign 0.0 yalign 1.0
Â Â Â Â show charf:
Â Â Â Â Â Â Â Â xalign 1.0 yalign 1.0
Â Â Â Â if _return == "eileen":
Â Â Â Â Â Â Â Â mc "ah..."
Â Â Â Â Â Â Â Â f "NOOOOOOOOOO"
Â Â Â Â Â Â Â Â f "WHAT DO I DO NOW"
Â Â Â Â Â Â Â Â mc "Well, it's over for you, Sherry. Better luck next time"
Â Â Â Â else:
Â Â Â Â Â Â Â Â mc "Easy"
Â Â Â Â Â Â Â Â f "OMG, thank you so much CyberGOD! I don't know what I would do without you!"
Â Â Â Â Â Â Â Â f "Well, now I have to go cry in a corner and continue sending in job apps. See you around!"
Â Â Â Â hide charf
Â Â Â Â mc "Well, that's that. Who should I help next?"
Â Â Â Â menu:
Â Â Â Â Â Â Â Â "Julie":
Â Â Â Â Â Â Â Â Â Â Â Â jump call
Â Â Â Â Â Â Â Â "Dylan":
Â Â Â Â Â Â Â Â Â Â Â Â jump popups
Â Â Â Â Â Â Â Â "quit":
Â Â Â Â Â Â Â Â Â Â Â Â jump end

label end:
Â Â Â Â mc "Well, that's it then"
Â Â Â Â mc "CyberGOD out"
Â Â Â Â return








Â Â Â 

